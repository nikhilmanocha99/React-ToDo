{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","react_default","a","createElement","className","onSubmit","preventDefault","userid","id","Math","floor","random","title","complete_","Fragment","type","placeholder","name","onChange","ref","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_TodoForm","map","todo","index","isComplete","key","class","onClick","TodoList","setTodos","test","newTodos","concat","toConsumableArray","components_Todo","updatedTodos","removetd","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"+KA+CeA,MA7Cf,SAAkBC,GAAO,IAAAC,EACKC,mBAASF,EAAMG,KAAOH,EAAMG,KAAKC,MAAQ,IAD9CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACdO,EADcH,EAAA,GACPI,EADOJ,EAAA,GAGfK,EAAWC,iBAAO,MAExBC,oBAAU,WACRF,EAASG,QAAQC,UAGnB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOb,QAcxB,OACIc,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYC,SAbT,SAAAN,GACjBA,EAAEO,iBAEDvB,EAAMsB,SAAS,CACZE,OAAO,EACPC,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBC,MAAOrB,EACPsB,WAAW,IAGfrB,EAAS,MAIVT,EAAMG,KACLe,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACAb,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOC,YAAY,mBAAmB7B,MAAOI,EAAO0B,KAAK,QACrEb,UAAU,aAAYc,SAAUpB,EAAcqB,IAAK1B,IACnDQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,WAGAH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACAb,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOC,YAAY,sBAAsB7B,MAAOI,EAC5D0B,KAAK,QAAQb,UAAU,aAAYc,SAAUpB,EAAcqB,IAAK1B,IAChEQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,aCIOgB,MAtCf,SAAAC,GAA6D,IAA9CC,EAA8CD,EAA9CC,MAAOC,EAAuCF,EAAvCE,aAAcC,EAAyBH,EAAzBG,WAAYC,EAAaJ,EAAbI,WAAazC,EAClCC,mBAAS,CAC5BuB,GAAG,KACHrB,MAAM,KAH+CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACnDE,EADmDE,EAAA,GAC7CsC,EAD6CtC,EAAA,GAYzD,OAAGF,EAAKsB,GACGP,EAAAC,EAAAC,cAACwB,EAAD,CAAUzC,KAAMA,EAAMmB,SAPZ,SAAAlB,GACjBsC,EAAWvC,EAAKsB,GAAIrB,GACpBuC,EAAQ,CAAClB,GAAG,KACRrB,MAAM,QAOTmC,EAAMM,IAAI,SAACC,EAAMC,GAAP,OACf7B,EAAAC,EAAAC,cAAA,OAAKC,UAAWyB,EAAKE,WAAa,oBAAsB,WAAYC,IAAKF,GACrE7B,EAAAC,EAAAC,cAAA,OAAK6B,IAAKH,EAAKrB,GAAIyB,MAAM,WACpBJ,EAAKjB,OAEVX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAU8B,QAAS,kBAAMX,EAAaM,EAAKrB,MAA7D,kBAGAP,EAAAC,EAAAC,cAAA,UAAQ+B,QAAS,kBAAMR,EAAQ,CAAClB,GAAGqB,EAAKrB,GAAIrB,MAAM0C,EAAKjB,SAASR,UAAU,aAA1E,aAGAH,EAAAC,EAAAC,cAAA,UAAQ+B,QAAS,kBAAMV,EAAWK,EAAKrB,KACvCJ,UAAU,eADV,eCoBD+B,MAjDf,WAAoB,IAAAnD,EACUC,mBAAS,IADnBG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACTsC,EADSlC,EAAA,GACFgD,EADEhD,EAAA,GAsClB,OACEa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACwB,EAAD,CAAUtB,SAvCE,SAAAwB,GACZ,GAAKA,EAAKjB,QAAS,QAAQyB,KAAKR,EAAKjB,OAArC,CAGA,IAAM0B,EAAQ,CAAIT,GAAJU,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAaiC,IAE3Bc,EAASE,OAkCTrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,4BACAH,EAAAC,EAAAC,cAACsC,EAAD,CAAMnB,MAAOA,EAAOC,aAjBH,SAAAf,GACnB,IAAIkC,EAAepB,EAAMM,IAAI,SAAAC,GAK3B,OAJIA,EAAKrB,KAAOA,IACdqB,EAAKE,YAAcF,EAAKE,YAGnBF,IAETO,EAASM,IASyClB,WAxBjC,SAAAhB,GACjB,IAAMmC,EAAWtD,OAAAmD,EAAA,EAAAnD,CAAIiC,GAAOsB,OAAO,SAAAf,GAAI,OAAIA,EAAKrB,KAAOA,IAEvD4B,EAASO,IAqBiElB,WAhCzD,SAACoB,EAAQC,GACrBA,EAASlC,QAAS,QAAQyB,KAAKS,EAASlC,QAG7CwB,EAAS,SAAAW,GAAI,OAAIA,EAAKnB,IAAI,SAAAoB,GAAI,OAAKA,EAAKxC,KAAOqC,EAASC,EAAWE,WCP1DC,MARf,WACE,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC+C,EAAD,QCHOC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtD,EAAAC,EAAAC,cAACF,EAAAC,EAAMsD,WAAP,KACEvD,EAAAC,EAAAC,cAACsD,EAAD","file":"static/js/main.169324e3.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '' );\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n      inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e =>{\r\n        setInput(e.target.value);\r\n    };\r\n    const handleSubmit = e=> {\r\n        e.preventDefault();\r\n\r\n         props.onSubmit({\r\n            userid:1,\r\n            id:Math.floor(Math.random()*10000),\r\n            title: input,\r\n            complete_: false\r\n         });\r\n\r\n        setInput('');\r\n    };\r\n  return (\r\n      <form className='todo-form' onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n        <input type='text' placeholder='Updata Your item' value={input} name='title' \r\n        className='todo-input'onChange={handleChange} ref={inputRef}/>\r\n        <button className='todo-button'>Update</button>\r\n        </>) : \r\n        (\r\n        <>\r\n        <input type='text' placeholder='Enter the task here' value={input} \r\n        name='title' className='todo-input'onChange={handleChange} ref={inputRef}/>\r\n        <button className='todo-button'>Sumbit</button>\r\n        </>\r\n        )\r\n      }\r\n        \r\n    </form>\r\n  )\r\n};\r\n\r\nexport default TodoForm","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const[edit, setEdit] = useState({\r\n        id:null,\r\n        value:''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({id:null,\r\n            value:''});\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n        <div key={todo.id} class='tit tsk'>\r\n            {todo.title}\r\n        </div>\r\n        <hr/>\r\n        <div className='tit'>\r\n                <button className='cmp_btn' onClick={() => completeTodo(todo.id)}>\r\n                    Mark Completed\r\n                </button>\r\n                <button onClick={() => setEdit({id:todo.id, value:todo.title})} className='edit-todo'>\r\n                    Edit Task\r\n                </button>\r\n                <button onClick={() => removeTodo(todo.id)}\r\n                className='delete-todo'>\r\n                    Delete\r\n                </button>\r\n        </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo","import React, {useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.title || /^\\s*$/.test(todo.title)) {\r\n          return;\r\n        }\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n      if (!newValue.title || /^\\s*$/.test(newValue.title)) {\r\n        return;\r\n      }\r\n      setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n\r\n    const removeTodo = id => {\r\n      const removetd = [...todos].filter(todo => todo.id !== id);\r\n\r\n      setTodos(removetd);\r\n    };\r\n\r\n\r\n    const completeTodo = id=> {\r\n      let updatedTodos = todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.isComplete = !todo.isComplete;\r\n\r\n        }\r\n        return todo;\r\n      });\r\n      setTodos(updatedTodos);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <h1>To-Do List</h1>\r\n        <h3>Add new task in the list</h3>\r\n        <TodoForm onSubmit={addTodo}/>\r\n        <h3 className='start'>Added task in To-Do List</h3>\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TodoList","import React from 'react';\nimport './App.css';\n//import TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}